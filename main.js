!function(){"use strict";class e{constructor(e,t,s,n,r){let{name:i,link:o,_id:a,isLiked:l}=e;this._name=i,this._link=o,this._id=a,this._isLiked=l,this._cardSelector=t,this._handleDeleteModal=n,this._handleImageClick=s,this._handleCardLike=r,this._element=this._getTemplate(),this._setEventListeners()}_getTemplate(){return document.querySelector(this._cardSelector).content.cloneNode(!0).querySelector(".card")}_setEventListeners(){this.likeButton=this._element.querySelector(".card__like-button"),this.likeButton.addEventListener("click",(()=>{this._handleCardLike(this,this._id,!this._isLiked)})),this.deleteButton=this._element.querySelector(".card__delete-button"),this.deleteButton.addEventListener("click",(()=>{this._handleDeleteModal(this)})),this._element.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}setIsLiked(e){this._isLiked=e,this.renderLike()}renderLike(){this._isLiked?this.likeButton.classList.add("card__like-button_active"):this.likeButton.classList.remove("card__like-button_active")}_handleDeleteCard(){this._element.remove()}_handleLikeIcon(){this.likeButton.classList.toggle("card__like-button_active")}getView(){return this._imageElement=this._element.querySelector(".card__image"),this._imageElement.src=this._link,this._imageElement.alt=this._name,this._titleElement=this._element.querySelector(".card__title"),this._titleElement.textContent=this._name,this.renderLike(),this._element}removeCard(){this._element.remove()}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputEls=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._formSelector=e.inputSelector}_toggleButtonState(){this._hasInvalidInput()?this.disableSubmitButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_setEventListeners(){this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{console.log("keystroke"),this._checkInputValidity(e),this._toggleButtonState()}))}))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputEls.some((e=>!e.validity.valid))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(),this._toggleButtonState()}resetValidation(){this._toggleButtonState(),this._inputEls.forEach((e=>this._hideInputError(e)))}disableSubmitButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}}document.querySelector(".modal__form"),document.querySelector("#add-card-form");class s{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popup.addEventListener("click",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}class n extends s{constructor(e,t){super(e),this._form=this._popup.querySelector(".modal__form"),this._inputList=this._form.querySelectorAll(".modal__input"),this._handleFormSubmit=t}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputList.forEach((t=>{void 0!==e[t.name]?t.value=e[t.name]:(console.log(`No data provided for input with name: ${t.name}`),t.value="")}))}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}getForm(){return this._form}renderLoadingModal(e){this._submitButton=this._form.querySelector(".modal__button"),this._submitButton.textContent=e?"Saving...":"Save"}}const r=document.querySelector(".profile__add-button"),i=new class{constructor(e){this.headers=e.headers,this.baseUrl=e.baseUrl}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this.baseUrl}/cards`,{headers:this.headers}).then(this._checkResponse)}getUserinfo(){return fetch(`${this.baseUrl}/users/me`,{headers:this.headers}).then(this._checkResponse)}saveUserInfo(e,t,s){return fetch(`${this.baseUrl}/users/me`,{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e,about:t,avatar:s})}).then(this._checkResponse)}getCardElement(e,t){return fetch(`${this.baseUrl}/cards`,{method:"POST",headers:this.headers,body:JSON.stringify({name:e,link:t})}).then(this._checkResponse)}handleDeleteCard(e){return fetch(`${this.baseUrl}/cards/${e}`,{method:"DELETE",headers:this.headers}).then(this._checkResponse)}changeLikeStatus(e,t){return fetch(`${this.baseUrl}/cards/${e}/likes`,{method:t?"PUT":"DELETE",headers:this.headers}).then(this._checkResponse)}editProfile(e,t){return console.log(e,t),fetch(`${this.baseUrl}/users/me`,{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}editAvatar(e){let{avatar:t}=e;return fetch(`${this.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"00971118-9fba-418f-9a4a-7fa64165e057","Content-Type":"application/json"}});function o(t){return console.log(t),new e(t,"#card-template",E,p,f).getView()}const a=new class{constructor(e,t){let{renderer:s,items:n}=e;this._items=n,this._renderer=s,this._element=document.querySelector(t)}renderItems(e){e.forEach((e=>this._renderer(e)))}addItem(e){this._element.prepend(e)}}({items:[{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"}],renderer:e=>{const t=o(e);a.addItem(t)}},".cards__list"),l=document.querySelector(".profile__edit-button"),c=document.forms["add-card-form"];c.reset();const d=new n("#add-card-modal",(e=>{d.renderLoadingModal(!0),i.getCardElement(e.title,e.url).then((e=>{a.addItem(o(e)),d.close(),c.reset(),v["add-card-form"].disableSubmitButton()})).catch((e=>console.error(e))).finally((()=>d.renderLoadingModal(!1)))}));d.setEventListeners();const h=new class extends s{constructor(e){super(e),this._imageEl=this._popup.querySelector(".modal__image"),this._titleEl=this._popup.querySelector(".modal__title")}open(e){this._imageEl.src=e.link,this._imageEl.alt=e.name,this._titleEl.textContent=e.name,super.open()}}("#preview-modal");h.setEventListeners();const u=new n("#profile-edit-modal",(e=>{console.log(e),u.renderLoadingModal(!0),i.editProfile(e.name,e.description).then((e=>{console.log(e),m.setUserInfo({name:e.name,about:e.about}),u.close()})).catch((e=>console.error(e))).finally((()=>u.renderLoadingModal(!1)))}));l.addEventListener("click",(()=>{const e=m.getUserInfo();u.setInputValues({name:e.name,description:e.about}),u.open()})),u.setEventListeners(),r.addEventListener("click",(()=>{d.open()}));const m=new class{constructor(e){let{nameSelector:t,aboutSelector:s,avatarSelector:n}=e;this._nameElement=document.querySelector(t),this._aboutElement=document.querySelector(s),this._avatarElement=document.querySelector(n)}getUserInfo(){return{name:this._nameElement.textContent,about:this._aboutElement.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._nameElement.textContent=t,this._aboutElement.textContent=s}setAvatar(e){let{avatar:t}=e;this._avatarElement.src=t}}({nameSelector:".profile__title",aboutSelector:".profile__description",avatarSelector:".profile__image"}),_=new class extends s{constructor(e){super(e),this._form=this._popup.querySelector(".modal__form")}setDeleteFunction(e){this._submitFunction=e}renderLoadingModal(e){this._form.querySelector(".modal__button").textContent=e?"Deleting...":"Yes"}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._submitFunction()}))}}("#remove-card-modal");function p(e){_.setDeleteFunction((()=>{_.renderLoadingModal(!0),i.handleDeleteCard(e._id).then((()=>{e.removeCard(),_.close()})).catch((e=>console.error(e))).finally((()=>_.renderLoadingModal(!1)))})),_.open()}_.setEventListeners();const v={};function E(e){h.open(e)}function f(e,t,s){i.changeLikeStatus(t,s).then((t=>{e.setIsLiked(t.isLiked)})).catch((e=>console.error(e)))}var g;g={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button-disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible",formSelector:".modal__form"},Array.from(document.querySelectorAll(g.formSelector)).forEach((e=>{const s=new t(g,e),n=e.getAttribute("name");v[n]=s,s.enableValidation()})),v["avatar-form"].disableSubmitButton(),Promise.all([i.getInitialCards(),i.getUserinfo()]).then((e=>{let[t,s]=e;a.renderItems(t),m.setUserInfo({name:s.name,about:s.about}),m.setAvatar({avatar:s.avatar}).catch((e=>console.error(e)))}));const b=new n("#avatar-modal",(e=>{b.renderLoadingModal(!0),i.editAvatar({avatar:e.avatar}).then((e=>{m.setAvatar(e),b.close()})).catch((e=>console.error(e))).finally((()=>b.renderLoadingModal(!1)))}));document.querySelector(".avatar__edit-button").addEventListener("click",(()=>{b.open()})),b.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,