!function(){"use strict";class e{constructor(e,t,s){let{name:n,link:r}=e;this.name=n,this.link=r,this._cardSelector=t,this._handleImageClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick(this)}))}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}getView(){return this._cardElement=this._getTemplate(),this._cardElement.querySelector(".card__title").textContent=this.name,this._cardElement.querySelector(".card__image").src=this.link,this._cardElement.querySelector(".card__image").alt=this.name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._submitBtn=this._form.querySelector(e.submitButtonSelector),this._inputEls=[...this._form.querySelectorAll(e.inputSelector)],this._settings=e}_toggleButtonState(){this._hasInvalidInput()?(this._submitBtn.classList.add(this._inactiveButtonClass),this._submitBtn.disabled=!0):(this._submitBtn.classList.remove(this._inactiveButtonClass),this._submitBtn.disabled=!1)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_setEventListeners(){this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{console.log("keystroke"),this._checkInputValidity(e),this._toggleButtonState()}))}))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputEls.some((e=>!e.validity.valid))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(),this._toggleButtonState()}resetValidation(){this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}disableSubmitButton(){this._submitBtn.classList.add(this._settings.inactiveButtonClass),this._submitBtn.disabled=!0}}const s=document.querySelector(".modal__form"),n=document.querySelector("#add-card-form"),r={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button-disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};class i{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(e=>{e.target===e.currentTarget&&this.close()})),this._popupElement.addEventListener("click",(e=>{e.target===this._popupElement&&this.close()}))}}class o extends i{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupForm.querySelectorAll(".modal__input"),this._handleFormSubmit=t}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._popupForm.reset(),super.close()})),super.setEventListeners()}}const a=document.querySelector(".profile__add-button"),l=new t(r,s),c=new t(r,n);function u(t){return new e(t,"#card-template",h).getView()}l.enableValidation(),c.enableValidation();const d=new class{constructor(e){let{renderer:t,selector:s}=e;this._renderer=t,this._element=document.querySelector(s)}renderItems(e){e.forEach((e=>this._renderer(e)))}addItem(e){this._element.prepend(e)}}({renderer:e=>{const t=u(e);d.addItem(t)},selector:".cards__list"});d.renderItems([{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"}]);const _=new o("#add-card-modal",(function(e){let{title:t,url:s}=e;const r=u({name:t,link:s});d.addItem(r),_.close(),n.reset(),c.disableSubmitButton()}));_.setEventListeners();const m=new class extends i{constructor(e){super({popupSelector:e}),this._imageEl=this._popupElement.querySelector(".modal__image"),this._titleEl=this._popupElement.querySelector(".modal__title")}open(e){this._imageEl.src=e.link,this._imageEl.alt=e.name,this._titleEl.textContent=e.name,super.open()}}("#preview-modal");function h(e){m.open(e)}m.setEventListeners();const p=new o("#profile-edit-modal",(function(e){E.setUserInfo(e),p.close()}));p.setEventListeners(),document.querySelector(".profile__edit-button").addEventListener("click",(()=>{const e=E.getUserInfo();p.setInputValues(e),l.resetValidation(),p.open()})),a.addEventListener("click",(()=>{_.open()}));const E=new class{constructor(e){let{userName:t,userJob:s}=e;this.userName=document.querySelector(t),this.userJob=document.querySelector(s)}getUserInfo(){return this._userInfo={name:this.userName.textContent,description:this.userJob.textContent},this._userInfo}setUserInfo(e){let{name:t,description:s}=e;this.userName.textContent=t,this.userJob.textContent=s}}({userName:".profile__title",userJob:".profile__description"})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,